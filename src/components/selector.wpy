<style type="less">
  .selector {
    padding: 10px 0;
  }
  .date-select, .location-select {
    padding: 12px 30rpx;
    background: #fff;
    margin-top: 20rpx;
  }
</style>
<template>
  <view class="selector">
    <view class="date-select">
      <picker mode="date" value="{{date}}" @change="selectDate" start="{{start}}" end="{{end}}">
        <view class="picker">
          选择日期: {{date}}
        </view>
      </picker>
    </view>

    <view class="location-select">
      <picker @change="selectLocation" value="{{index}}" range="{{locations}}" range-key="name">
        <view class="picker">
          选择楼号: {{locations[index].name}}
        </view>
      </picker>
    </view>

  </view>
</template>
<script>
  import wepy from 'wepy'
  import fecha from 'fecha'
  import api from '../api'

  export default class Selector extends wepy.component {
    data = {
      date: fecha.format(new Date(), 'YYYY-MM-DD'),
      index: 0,
      locations: [],
      start: '',
      end: '',
      superUsers: null
    }

    events = {
      'check-super-user': async (user) => {
        console.log('check-super-user')
        const superUsers = await this.getSuperUsers()
        if (superUsers && this.isSuperUser(user, superUsers)) {
          this.start = ''
          this.end = ''
          this.$apply()
        }
      },

      // 如果写在 onLoad 里面只会触发一次
      // 而 wepy.component 不响应 onShow
      // 为了避免第一次打开网络不好没加载出来 locations
      // 暂时不开启 减少网络请求 后期可以优化
      // 'load-locations': async () => {
      //   console.log('load-locations')
      //   await this.loadLocations()
      // }
    }

    methods = {
      selectDate (e) {
        this.date = e.detail.value
        this.$emit('date-emit', e.detail.value)
      },
      selectLocation(e) {
        this.index = e.detail.value

        this.$emit('location-emit', this.locations[this.index])
      }
    }

    onLoad() {
      console.log('selector onload')

      const now = new Date()
      this.start = fecha.format(now, 'YYYY-MM-DD')
      this.end = fecha.format(now.setDate(now.getDate() + 2), 'YYYY-MM-DD')
      this.$apply()

      this.loadLocations()
    }

    async loadLocations() {
      console.log('selector onshow')
      try {
        const res = await api.getLocations()
        this.locations = res.data

        if (this.locations.length > 0) {
          this.$emit('location-emit', this.locations[0])
        }
      } catch (e) {
        console.log(e)
        console.log('获取楼号失败')
      }

      this.$apply()
    }

    isSuperUser(user, superUsers) {
      for (let i in superUsers) {
        if (superUsers[i].wanxin == user.wanxin) {
          return true
        }
      }

      return false
    }

    async getSuperUsers() {
      // if (this.superUsers !== null) {
      //   return this.superUsers
      // }

      try {
        const res = await api.getSuperUsers()
        this.superUsers = res.data
        this.$apply()
        return res.data
      } catch (e) {
        console.log(e)
        return null
      }
    }
  }
</script>
